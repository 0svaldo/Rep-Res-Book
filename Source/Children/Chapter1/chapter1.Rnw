% Chapter Chapter 1 For Reproducible Research in R and RStudio
% Christopher Gandrud
% Created: 16/07/2012 05:45:03 pm CEST
% Updated: 2 August 2012

<<set-parent1, echo=FALSE, results='hide', cache=FALSE>>=
set_parent('/git_repositories/Rep-Res-Book/Source/Parent/Rep-Res-Parent.Rnw')
@

\chapter{Introducing Reproducible Research}\label{Intro}

FILL IN

\section{What is reproducible research?}

\section{Why should research be reproducible?}

Incorporating high reproducibility into your research is important for science and it also makes the research process easier for the researcher. 

\subsection{For Science}

\subsection{For You}

Working to make your research reproducible from the start makes the research process easier. A third person may or may not actually reproduce your research even if you make it easy to do so. But, it's almost certain that you will reproduce parts or even all of your research. Virtually no actual research process is completely linear. We almost never gather data, run our analyses, and present our results without also going backwards to add variables, make changes to our statistical models, create new graphs, and so on. Whether these changes are because of journal reviewers' and conference participants comments or we discover that new and better data has been made available since beginning the project, designing our research to be reproducible from the start makes it much easier to make these changes. 

Changes made to one part of a research project have a way of cascading through the other parts. For example, adding a new variable to a largely completed analysis requires gathering new data and merging it into existing data sets. If we are using data imputation or matching methods this can lead to adjustments to the entire data set. We then have to update our statistical models and the tables and graphs we use to present results. Adding a new variable essentially forces us to reproduce large portions of our research. If we made it easier for others do reproduce our research we also made it easier for us to do this. Jake Bowers has referred to this as taking steps to have a ``better relationship with our future selves" \cite{Bowers2011}.

COMPLETE

\section{Who should read this book?}

This book is intended primarily for upper-level undergraduate and graduate students and professional researchers who want to develop a more systematic workflow that encourages reproducibility.

\subsection{Students}

\subsection{Researchers}

\subsection{Industry practitioners}

\section{Why use R/RStudio for reproducible research?}

\paragraph{R}
Why use a statistical programming language like R for reproducible research? R is more than just a statistics program, like \index{SAS}, Stata\index{Stata}, or SPSS\index{SPSS}. It can be used to integrate all stages of the research process not just the statistical analysis stage. COMPLETE

The way we interact with R or any other programming and markup language promotes reproducibility more than our interactions with Graphical User Interface (GUI) programs like SPSS\footnote{I know you can write scripts in statistical programs like SPSS, but doing so is not encouraged by the interface and we often have to learn multiple languages just to write scripts that run analyses, create graphics, and deal with matrices.} and Microsoft Word. When we write (and save) R code we are being forced to explicitly express the steps we take to accomplish a goal in an easily documented way. When we achieve a goal by clicking through drop down menus in GUI programs, the steps we take are lost. To document them requires considerable extra effort.

\paragraph{RStudio}
Why use an Integrated Development Environment (IDE), especially RStudio for reproducible research? RStudio allows us to have all of the R's advantages, but in a more visually navigable way. Think of it a as happy medium between R's text-based interface and a pure GUI. COMPLETE

RStudio also has a very tight integration with technologies such as {\tt{knitr}} and \LaTeX that makes the presentation of reproducible presentation of results. 

\subsection{Complete integration of data gathering, analysis, and
presentation.}

\subsubsection{Presentation}

There are many \LaTeX editors available, both open source and paid, as
well as other ways to compile \LaTeX documents, including directly
through the command line. \textbf{R} is capable of compiling
\LaTeX documents through .

\textbf{RStudio} is actually as a very nice \LaTeX editor. For creating
documents that integrate markup and \textbf{R} code, at the moment it
pretty much can't be beat. It has full syntax highlighting, even for
documents with \texttt{knitr} code (which it can collapse when you just
want to work on the text). It can spell check \LaTeX documents. It
handles \texttt{knitr} code chunks beautifully making it easy to
navigate through complex documents and run individual chunks.

Even if you aren't creating documents that integrate \textbf{R} code,
\emph{R} is still a decent full functioning \LaTeX editor. It can insert
common commands like \texttt{\textbackslash{}section*\{\}} for
unnumbered sections. Most importantly it easily compile \LaTeX documents
and show you a preview.

\section{Book overview}

\subsection{What this book is not.}\label{WhatNot}

This book describes a workflow for reproducible research primarily using
R and RStudio. It is designed to give you the
necessary tools to use this workflow for your own research. It is not
designed to be a complete introduction to R, RStudio,
GitHub, the command line, or any other program that is a part
of this workflow. Instead it shows you how these tools can fit together
to make your√ü research more reproducible.

To get the most out of these individual programs I point you to other
resources that cover these programs in more detail.

That being said, my goal in this for this book to be self-sufficient to
the extent that a reader without a detailed understanding of these
programs will be able to understand and use the commands and procedures
I cover in this book. While learning how to use R and the other
programs I often encountered examples that included commands, variables,
and other things that were not well explained in the texts that I was
reading. This caused me to waste many hours trying to figure out, for
example, what the \texttt{\$} is used for (preview: it's the 'component selector'). I hope to save
you from this wasted time by either providing a brief explanation of
these possibly frustratingly mysterious conventions and/or pointing you
in the direction of a good explanation.

To that end, I can recommend a number of books for that cover more of
the nitty-gritty of R and the command line.

\begin{itemize}
\item
  Michael J. Crawley's encyclopaedic R book, appropriately
  titled, \textbf{The R Book} published by Wiley.
\item
  Norman Matloff's tour through the programming language aspects of
  R called \textbf{The Art of R Programming: A Tour of
  Statistical Design Software} published by No Starch Press.
\item
  For an excellent introduction to the command line in Linux and Mac,
  though with pretty clear implications for Windows users if they are
  running PowerShell (see Chapter 2) see William E. Shotts
  Jr.'s book \emph{The Linux Command Line: A Complete Introduction} also
  published by No Starch Press.
\item
  The RStudio website (\url{http://rstudio.org/docs/}) has a
  number of useful tutorials on how to use \texttt{knitr} with
  \LaTeX and Markdown.
\end{itemize}
\subsection{How to read this book.}

This book tells a story. It has a beginning, middle, and end. So, unlike
a reference book it can and should be read like a novel, taking you
through an empirical research processes from an empty folder maybe
called \texttt{Research Paper} to a completed set of documents that
showcase your findings.

That being said, readers with more experience using tools like
R or \LaTeX) may want to
skip over the nitty-gritty parts of the book that describe how to
manipulate data frames or compile a \LaTeX) document into a PDF. Please feel free to do
this.

If you are experienced with R in particular you may want to
skip over Chapter 3: Getting Started with R/RStudio.

\subsection{How this book was written}

This book practices what it preaches. It can be reproduced. It was
written using the programs and methods that it describes. Full
documentation and source files can be found at the Book's
\textbf{GitHub} repository.

Feel free to read and even copy (within reason and with attribution, of
course) the Book's source code. You can find it at
\url{https://github.com/christophergandrud/Rep-Res-Book}. This is
especially useful if you want to know how to do something in the book
that I don't directly cover in the text.

In the same spirit, I encourage you to make your research files--not
just data, but analysis code and markup--available for other researchers
to learn from.

Not only does reproducibility help us evaluate past work, but it also
pushes forward knowledge in the scientific community.

\subsection{Contents overview.}

