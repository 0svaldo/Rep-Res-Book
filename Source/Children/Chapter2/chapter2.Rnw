% Chapter Chapter 2 For Reproducible Research in R and RStudio
% Christopher Gandrud
% Created: 16/07/2012 05:45:03 pm CEST
% Updated: 

<<set-parent2, echo=FALSE, results='hide', cache=FALSE>>=
set_parent('/git_repositories/Rep-Res-Book/Source/Parent/Rep-Res-Parent.Rnw')
@

\chapter{Getting Started with Reproducible Research}

\section{The Big Picture: A workflow for reproducible research}

\subsection{Data Gathering}

\subsection{Data Analysis}

\subsection{Data Presentation}

\section{Practical tips for reproducible research}

To help you  is good to keep a few over

\subsection{Document everything!}

In order to reproduce your research others must be able to know what you did. You have to tell them what you did by documenting as much of your research process as possible. Ideally, you should tell your readers how you gathered your data, analyzed it, and presented the results.

The other tips and Many of the other One important part of documenting everything with R is to \emph{record your \index{session info}}. Many things in R stay the same over time, which makes it easy for future researchers to recreate what was done in the past. However, things--syntax in particular--do can change from one version of R to another. Also, the way R functions may be handled slightly different on different operating systems. Finally, you may have R set to load packages by default. These packages might be necessary to run your code, but other people might not be able know what packages were loaded from just looking at your source code. The \texttt{sessionInfo} command prints a record of all of these things. The information from the session I used to create this book up until this chapter is:

<<Ch2SessionInfoPlain, tidy=TRUE>>=
sessionInfo()
@

\noindent It is good practice to include make output of the session info available either in the main document or in a separate text file. If you want to nicely format the information for a \LaTeX document simply use the {\tt{toLatex}} command.

<<Ch2SessionInfoLatex, eval=FALSE>>=
toLatex(sessionInfo())
@

\noindent Otherwise, you can use the {\tt{print}} command. 

\subsection{All files should be human readable}

Treat all of your research documents as if someone who has not worked on the project will try to read them and understand them. Computer code is a way of communicating with the computer. It is `machine readable' in that the computer is able to use it to understand what we want done.\footnote{Of course, if it does not understand it will usually give us an error message.} Hopefully, the researcher understands what they are communicating when they write their code. However, there is a very good chance that other people (or the researcher six months in the future) will not understand what is being communicated. So, you need to make your documentation `human readable'. To make your documentation accessible to other people you need to {\bf{comment frequently}} and {\bf{format your code using a style guide}}. 

\paragraph{Commenting}
In R everything on a line after a {\tt{#}} hash (number) character is ignored by R, but is readable to people who open the file. This is called a \index{comment declaration} You can use the {\tt{#}} to place comments telling other people what you are doing.\footnote{The hash character is also used this way in shell scripts.} Here are some examples:

<<Ch2CommentHash>>=
# A complete comment line
2 + 2 # A comment after R code
@

\noindent In \LaTeX everything after the {\tt{\%}} percent sign is treated as a comment and in markdown/HTML comments are placed inside of {\tt{\textless !-- --\textgreater}}.

\paragraph{Style guides}
In natural language writing you don't necessarily need to follow a \index{style guide} for things such as punctuation. People could probably figure out what you are saying. But it would be a lot easier for your readers if you use consistent rules. The same is true when writing R code. It's good to follow consistent rules for formatting your code so that:

\begin{itemize}
    \item it's easier for others to understand,
    \item it's easier for you to understand.
\end{itemize}

There are a number of R style guides. Most of them are similar to the Google R Style Guide (\url{http://google-styleguide.googlecode.com/svn/trunk/google-r-style.html}). Hadley Wickham has a nicely presented style guide. You can find it at \url{https://github.com/hadley/devtools/wiki/Style}. You can use the package \index{\tt{formatR}} to automatically reformat your code so that it is easier to read.

\subsection{Work hard so you can be lazy}

\subsection{Everything is a (text) file}

\subsection{Research projects are many files tied together}

\subsection{Have a plan to organize, store, and make your files
available}

\section{The tools of reproducible research covered in this book}

\subsection{R/RStudio}

\subsection{\texttt{knitr}}

\subsection{Cloud storage \& versioning}

\subsection{The command line}

\subsection{Markup languages: \LaTeX \& Markdown/HTML}

