library(msm)
?statetable.msm
names(AMCLag)
StateTable <- statetable.msm(state = AMCStatus, subject = ISOCode, data = AMCLag)
StateTable
39/15
15/39
5/15
StateTable <- unname(StateTable)
rownames(StateTable) <- c("No AMC", "Centralised", "Decentralised")
colnames(StateTable) <- c("No AMC", "Centralised", "Decentralised")
fix(StateTable)
StateTable <- data.frame(StateTable)
rstudio::viewData(StateTable)
StateTableDF <- data.frame(StateTable)
fin.heatmap <- ggplot(StateTableDF, aes(Var2, Var1)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = Freq)) +
scale_fill_gradient2(low = "white", high = "red", name = "") +
xlab("\nAfter") + ylab("Before\n") +
theme_bw()
fin.heatmap
StateTableDF <- subset(StateTableDF, Var1 != Var2)
Create heatmap
StateTablePlot <- ggplot(StateTableDF, aes(Var2, Var1)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = Freq)) +
scale_fill_gradient2(low = "white", high = "red", name = "") +
xlab("\nAfter") + ylab("Before\n") +
theme_bw()
StateTableDF <- subset(StateTableDF, Var1 != Var2)
rstudio::viewData(StateTableDF)
Create heatmap
StateTablePlot <- ggplot(StateTableDF, aes(Var2, Var1)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = Freq)) +
scale_fill_gradient2(low = "white", high = "red", name = "") +
xlab("\nAfter") + ylab("Before\n") +
theme_bw()
print(StateTablePlot)
rstudio::viewData(AMCLag)
M1 <- crrc(ftime = AMCLag$year,
fstatus = AMCLag$AMCStatus,
cov1 = AMCLag$UDS,
cluster = AMCLag$country)
summary(M1)
print(M1)
M1$coef
M1 <- crrc(ftime = AMCLag$year,
fstatus = AMCLag$AMCStatus,
cov1 = AMCLag$UDS,
failcode = 2
cluster = AMCLag$country)
M1 <- crrc(ftime = AMCLag$year,
fstatus = AMCLag$AMCStatus,
cov1 = AMCLag$UDS,
failcode = 2,
cluster = AMCLag$country)
M1$coef
M1 <- crrc(ftime = AMCLag$year,
fstatus = AMCLag$AMCStatus,
cov1 = AMCLag$UDS,
failcode = 3,
cluster = AMCLag$country)
M1$coef
plot(M1)
?with
with(AMCLag, {
M1 <- crrc(ftime = AMCLag$year,
fstatus = AMCLag$AMCStatus,
cov1 = AMCLag$UDS,
failcode = 3,
cluster = AMCLag$country)
})
M1$coef
with(AMCLag, {
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = UDS,
failcode = 3,
cluster = country)
})
M1$coef
fix(`M1`)
with(AMCLag, {
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = UDS,
failcode = 3,
strata = country)
})
M1$coef
rm(M1)
with(AMCLag, {
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = UDS,
failcode = 3,
strata = country)
})
M1$coef
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = UDS,
failcode = 3,
strata = country)
detach(AMCLag)
M1$coef
plot.cuminc(M1)
library(cmprsk)
install.packages(cmprsk)
install.packages("cmprsk")
library(cmprsk)
plot.cuminc(M1)
M1Predict <- predict(M1, c(-5, 0, 5, 10))
rstudio::viewData(AMCLag)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = c(UDS, SystemicCrisisLag3),
failcode = 3,
strata = country)
detach(AMCLag)
?crrs
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 3,
strata = country)
detach(AMCLag)
M1$coef
M1Predict <- predict(M1, c(-5, 0, 5, 10))
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 3,
cluster = country)
detach(AMCLag)
M1$coef
M1Predict <- predict(M1, c(-5, 0, 5, 10))
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
M1$coef
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
M1$coef
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 3,
cluster = country)
detach(AMCLag)
M1$coef
fix(`M1`)
summary(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
summary(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cencode = 1,
cluster = country)
detach(AMCLag)
summary(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
summary(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
summary(M1)
rm(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 2,
cluster = country)
detach(AMCLag)
summary(M1)
attach(AMCLag)
M1 <- crrc(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 3,
cluster = country)
detach(AMCLag)
summary(M1)
rm(M1)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 3,
ctype = 2
cluster = country)
attach(AMCLag)
detach(AMCLag)
attach(AMCLag)
detach(AMCLag)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(UDS, SystemicCrisisLag3),
failcode = 3,
ctype = 2,
strata = country)
detach(AMCLag)
M1$coef
source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/PaperDataLoadClean.R")
exit
q()
ParentDirectory <- "/git_repositories/Rep-Res-Book/Source/Parent/"
setwd(ParentDirectory)
# Compile the book's parent document
knit2pdf(input = "Rep-Res-Parent.Rnw")
library(knitr)
# Change working directory to /Rep-Res-Book/Source/Parent
ParentDirectory <- "/git_repositories/Rep-Res-Book/Source/Parent/"
setwd(ParentDirectory)
# Compile the book's parent document
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
DeleteFiles <- setdiff(list.files(ParentDirectory), c("Rep-Res-Parent.Rnw", "Rep-Res-Parent.pdf", "krantz.cls", "figure", "cache"))
unlink(DeleteFiles)
ParentDirectory <- "/git_repositories/Rep-Res-Book/Source/Parent/"
setwd(ParentDirectory)
# Compile the book's parent document
knit2pdf(input = "Rep-Res-Parent.Rnw")
DeleteFiles <- setdiff(list.files(ParentDirectory), c("Rep-Res-Parent.Rnw", "Rep-Res-Parent.pdf", "krantz.cls", "figure", "cache"))
unlink(DeleteFiles)
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
