ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
scale_x_continuous(limits = c(0, 10)) +
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_x_continuous(limits = c(0, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_x_continuous(limits = c(0, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_x_continuous(limit = c(0, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_y_continuous(limits = c(0, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_y_continuous(limits = c(0, 10), labels = c(0, 5, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_y_continuous(breaks = c(0, 5, 10), labels = c(0, 5, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7) +
scale_y_continuous(limits = c(0, 10), breaks = c(0, 5, 10), labels = c(0, 5, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7, color = "#FDBB84") +
scale_y_continuous(limits = c(0, 10), breaks = c(0, 5, 10), labels = c(0, 5, 10)) +
xlab("") + ylab("Percentage Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(ChangeData, aes(x = Dept2, y = SpendChange)) +
geom_point(size = 7, color = "#FDBB84") +
scale_y_continuous(limits = c(0, 10), breaks = c(0, 5, 10), labels = c(0, 5, 10)) +
xlab("") + ylab("% Change\n") +
ggtitle("Percentage Change in Departmental Spending\n 2012-2013") +
theme_bw(base_size = 16)
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3") +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_line(color = "#80B1D3", size = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_crossbar(color = "#80B1D3", size = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, shape = -) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, shape = -) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
@
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, shape = -) +
scale_y_continuous(limits = c(0, 100)) +
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, aes(shape = -)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, aes(shape = coord)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, aes(shape = condd)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, aes(shape = cond)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(aes(shape = cond, color = "#80B1D3", size = 7)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(aes(color = "#80B1D3", size = 7)) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = a) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
scale_shape_discrete(solid=T, legend=F) +
geom_point(color = "#80B1D3", size = 4, shape = a) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 2) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 5) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 6) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 7) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 8) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 9) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 10) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 11) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 13) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 4, shape = 3) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
ggplot(data = CircComp, aes(reorder(Names, Numbers), Numbers)) +
geom_point(color = "#80B1D3", size = 7, shape = 3) +
scale_y_continuous(limits = c(0, 100)) +
ylab("") + xlab("") +
theme_bw()
library(help="graphics")
with(MortalityGDP,
plot(x = InfantMortality, y = GDPperCapita))
with(MortalityGDP,
plot(x = InfantMortality,
y = (GDPperCapita/1000),
xlab = "Infant Mortality per 1000 Births",
ylab = "GDP/Capita \n (1,000s of US$)"))
with(MortalityGDP,
plot(x = InfantMortality,
y = (GDPperCapita/1000),
xlab = "Infant Mortality per 1000 Births",
ylab = "\nGDP/Capita \n (1,000s of US$)"))
with(MortalityGDP,
plot(x = InfantMortality,
y = (GDPperCapita/1000),
xlab = "Infant Mortality per 1000 Births",
ylab = "GDP/Capita (1,000s of US$)"))
with(MortalityGDP,
plot(x = InfantMortality,
y = (GDPperCapita/1000),
xlab = "Infant Mortality per 1000 Births",
ylab = "GDP/Capita (1,000s of US$)",
main = "Scatter plot of\n GDP/Capita & Infant Mortality"))
ggplot(data = MortalityGDP,
aes(x = InfantMortality,
y = GDPperCapita))
ggplot(data = MortalityGDP,
aes(x = InfantMortality,
y = GDPperCapita)) +
geom_point()
Colours <- c("#1B9E77", "#D95F02", "#7570B3",
"#E7298A", "#66A61E", "#E6AB02")
# Create graph
ColourScatter <- ggplot(data = InfantNoMiss,
aes(log(InfantMortality),
log(GDPperCapita))) +
geom_point(aes(colour = income)) +
scale_color_manual(values = Colours) +
xlab("\nLog Infant Mortality") +
ylab("Log GDP/Capita\n") +
ggtitle("Scatterplot of GDP/Capita \n
& Infant Mortality")
theme_bw()
# Create colour vector
Colours <- c("#1B9E77", "#D95F02", "#7570B3",
"#E7298A", "#66A61E", "#E6AB02")
# Create graph
ColourScatter <- ggplot(data = InfantNoMiss,
aes(log(InfantMortality),
log(GDPperCapita))) +
geom_point(aes(colour = income)) +
scale_color_manual(values = Colours) +
xlab("\nLog Infant Mortality") +
ylab("Log GDP/Capita\n") +
ggtitle("Scatterplot of GDP/Capita \n
& Infant Mortality") +
theme_bw()
ColourScatter
ggplot(data = InfantNoMiss,
aes(log(InfantMortality),
log(GDPperCapita))) +
geom_point(aes(colour = income)) +
scale_color_manual(values = Colours) +
xlab("\nLog Infant Mortality") +
ylab("Log GDP/Capita\n") +
ggtitle("Log Transformed GDP/Capita
& Infant Mortality") +
theme_bw()
ggplot(data = InfantNoMiss,
aes(log(InfantMortality),
log(GDPperCapita))) +
geom_point(aes(colour = income)) +
scale_color_manual(values = Colours) +
xlab("\nLog Infant Mortality") +
ylab("Log GDP/Capita\n") +
ggtitle("Log Transformed Data") +
theme_bw()
ggplot(data = InfantNoMiss,
aes(log(InfantMortality),
log(GDPperCapita))) +
geom_point(aes(colour = income)) +
scale_color_manual(values = Colours) +
xlab("\nLog Infant Mortality") +
ylab("Log GDP/Capita\n") +
ggtitle("Log Transformed Data\n") +
theme_bw()
Violin <- ggplot(MortalityGDP, aes(
factor(income),
InfantMortality)) +
geom_violin() +
theme_bw()
Violin
Violin <- ggplot(MortalityGDP, aes(
factor(region),
InfantMortality)) +
geom_violin() +
theme_bw()
Violin
Violin <- ggplot(MortalityGDP, aes(
factor(region),
log(GDPperCapita)) +
geom_violin() +
theme_bw()
Violin
Violin <- ggplot(MortalityGDP, aes(
factor(region),
log(GDPperCapita)) +
geom_violin() +
theme_bw()
Violin <- ggplot(MortalityGDP, aes(
factor(region),
log(GDPperCapita))) +
geom_violin() +
theme_bw()
Violin <- ggplot(MortalityGDP, aes(
factor(region),
log(GDPperCapita))) +
geom_violin() +
theme_bw()
Violin
viewData(MortalityGDP)
Violin <- ggplot(MortalityGDP, aes(
factor(DunMort),
log(GDPperCapita))) +
geom_violin() +
theme_bw()
Violin
viewData(MortalityGDP)
Violin <- ggplot(MortalityGDP, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin() +
theme_bw()
Violin
viewData(MortalityGDP)
names(MortalityGDP)
viewData(InfantNoMiss)
viewData(MortalityGDP)
library(devtools)
# Gather data using source code at:
# http://bit.ly/OTWEGS
# Data is stored in a data frame: MortalityGDP
source_url("http://bit.ly/OTWEGS")
# Create data with no missing values of infant mortali
InfantNoMiss <- subset(MortalityGDP,
!is.na(InfantMortality))
# Create High/Low Income Variable
InfantNoMiss$DumMort[InfantNoMiss$InfantMortality
>= 15] <- "high"
InfantNoMiss$DumMort[InfantNoMiss$InfantMortality
< 15] <- "low"
Violin <- ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin() +
theme_bw()
Violin
ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A") +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n")
theme_bw(base_size = 16)
ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A",
colour = "#E7298A") +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n") +
theme_bw(base_size = 16)
ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A",
colour = "#E7298A") +
geom_point() +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n") +
theme_bw(base_size = 16)
ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A",
colour = "#E7298A") +
geom_jitter() +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n") +
theme_bw(base_size = 16)
ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A",
colour = "#E7298A") +
geom_jitter() +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n") +
theme_bw(base_size = 16)
Violin <- ggplot(InfantNoMiss, aes(
factor(DumMort),
log(GDPperCapita))) +
geom_violin(fill = "#E7298A",
colour = "#E7298A",
alpha = I(0.5)) +
geom_jitter(color = "#7570B3") +
xlab("\n Infant Mortality") +
ylab("Log GDP.Capital\n") +
theme_bw(base_size = 16)
Violin
library(GoogleVis)
library(googleVis)
?gvisGeoMap
?var
?do.call
## See also http://bit.ly/PbabKd
doInstall <- FALSE  # Change to FALSE if you don't want packages installed.
toInstall <- c("apsrtable",
"devtools",
"extrafont",
"ggplot2",
"knitr",
"knitcitations",
"markdown",
"openair",
"RCurl",
"texreg",
"tools",
"xtable",
"Zelig")
if(doInstall){install.packages(toInstall, repos = "http://cran.us.r-project.org")}
lapply(toInstall, library, character.only = TRUE)
##### Create PDF Book Manuscript ####
# Change working directory to /Rep-Res-Book/Source/Parent
ParentDirectory <- "/git_repositories/Rep-Res-Book/Source/Parent/"
setwd(ParentDirectory)
# Compile the book's parent document
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
dir.create("/Test/")
dir.create("/Test")
dir.create("~/Test/")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
knit2pdf(input = "Rep-Res-Parent.Rnw")
library(Zelig)
NBModel <- zelig(Examination ~ Education, model = "normal.bayes",
data = swiss, cite = FALSE)
?zelig
help.zelig("models")
NBModel <- zelig(Examination ~ Education, model = "ls",
data = swiss, cite = FALSE)
NBModel <- zelig(Examination ~ Education, model = "normal.bayes",
data = swiss, cite = FALSE)
install.packages("ZeligBayesian", repos="http://r.iq.harvard.edu/", type="source")
library("ZeligBayesian")
NBModel <- zelig(Examination ~ Education, model = "normal.bayes",
data = swiss, cite = FALSE)
fix(NBModel)
install.packages("ZeligBayesian")
class(NBModel)
summary(NBModel)
NBModel <- zelig(Examination ~ Education, model = "normal.bayes",
data = swiss, cite = FALSE)
library(ZeligBayesian)
# Run model
NBModel <- zelig2normla.bayes(Examination ~ Education,
data = swiss, cite = FALSE)
NBModel <- zelig2normal.bayes(Examination ~ Education,
data = swiss, cite = FALSE)
summary(NBModel)
fix(NBModel)
, cite = FALSE
NBModel <- zelig2normal.bayes(Examination ~ Education,
data = swiss)
NBModel <- zelig(Examination ~ Education,
model = "normal.bayes", data = swiss)
NBModel <- zelig(Examination ~ Education,
model = "normal.bayes", data = data.frame(swiss))
z.out <- zelig(
unem ~ gdp + capmob + trade,
model = "normal.bayes",
data = macro,
verbose=TRUE
)
data(macro)
z.out <- zelig(
unem ~ gdp + capmob + trade,
model = "normal.bayes",
data = macro,
verbose=TRUE
)
