M1ExecSet14 <- setx(M1, lbc = 1, led = 1, LcbLedInteract = 1, strata = "count_polit12=14")
M1NoneExecSet14 <- setx(M1, lbc = 1, led = 0, LcbLedInteract = 0, strata = "count_polit12=14")
Simulate
M1Sim2 <- sim(M1, x = M1ExecSet2, x1 = M1NoneExecSet2)
M1Sim14 <- sim(M1, x = M1ExecSet14, x1 = M1NoneExecSet14)
Extract quantity of interest
M1Sim2.hr <- M1Sim2$qi
M1Sim2.hr <- data.frame(M1Sim2.hr$hr)
names(M1Sim2.hr) <- "HazardRatio"
M1Sim2.hr$Strata <- "2"
M1Sim14.hr <- M1Sim14$qi
M1Sim14.hr <- data.frame(M1Sim14.hr$hr)
names(M1Sim14.hr) <- "HazardRatio"
M1Sim14.hr$Strata <- "14"
Combine simulation columns
M1SimMaster <- rbind(M1Sim2.hr, M1Sim14.hr)
Plot HR densities
StrataPlot <- ggplot(data = M1SimMaster, aes(x = HazardRatio, colour = Strata, fill = Strata)) +
stat_density() +
xlab("\nHazard Ratio") + ylab("Density\n") +
theme_bw()
print(StrataPlot)
M1Sim2 <- sim(M1, x = M1ExecSet2, x1 = M1NoneExecSet2)
M1Sim14 <- sim(M1, x = M1ExecSet14, x1 = M1NoneExecSet14)
summary(M1Sim2)
install.packages(c("MASS", "corrgram", "ez", "googleVis", "gridExtra", "gsubfn", "timeSeries"))
install.packages("slidify")
?dataset
?data
data()
rivers <- rivers
fix(rivers)
class(rivers)
?round
?cat
sessionInfo()
ExplainHead <- "Session Info for a test project"
Info <- sessionInfo()
cat(ExplainHead, Info, file = "~Desktop/TestSessionInfo.tex")
cat(ExplainHead, Info, file = "~/Desktop/TestSessionInfo.tex")
cat(ExplainHead, Info, file = "~/Desktop/TestSessionInfo.txt")
fix(Info)
Info <- as.string(sessionInfo())
Info <- string(sessionInfo())
Info <- character(sessionInfo())
Info <- as.character(sessionInfo())
fix(Info)
cat(ExplainHead, Info, file = "~/Desktop/TestSessionInfo.txt")
Info <- as.dataframe(sessionInfo())
Info <- as.data.frame(sessionInfo())
Info <- matrix(sessionInfo())
View(Info)
print(ExplainHead, Info, file = "~/Desktop/TestSessionInfo.txt")
Info <- sessionInfo()
print(ExplainHead, Info, file = "~/Desktop/TestSessionInfo.txt")
print(Info, file = "~/Desktop/TestSessionInfo.txt")
fix(Info)
?print
print(Info, locale = FALSE)
cat(print(Info), file = "~/Desktop/TestSessionInfo.txt")
?dump
cat(dump(Info), file = "~/Desktop/TestSessionInfo.txt")
Info
dump(Info, file = "~/Desktop/Test.txt")
cat(as.Character(Info), file = "~/Desktop/TestSessionInfo.txt")
cat(as.character(Info), file = "~/Desktop/TestSessionInfo.txt")
toLatex(Info)
?toLatex
test <- print(Info)
fix(test)
toLatex()
toLatex(sessionInfo())
writeLines(print(sessionInfo()))
writeLines(Info)
??markdown
?source
?system
?try
library(knitr)
?system
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex")
test <- system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex")
print(system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex"))
test <- (as.character(system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex")))
?system
test <- system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex", intern = TRUE)
fix(test)
test
StyleCon <- system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex", intern = TRUE)
StyleConOut <- paste(StyleCon, sep = "")
fix(StyleConOut)
StyleCon <- system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex", intern = TRUE)
StyleConOut <- paste(StyleCon, sep = "", collapse = "")
fix(StyleConOut)
StyleCon <- system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex", intern = TRUE)
StyleConOut <- paste(StyleCon, sep = "", collapse = "\\")
fix(StyleConOut)
?toLatex
?tempfile
temp <- tempfile()
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex -o temp", intern = TRUE)
readLines(temp.tex)
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex -o ~/Desktop/temp.tex", intern = TRUE)
unlink(~/Desktop/temp.tex)
unlink("~/Desktop/temp.tex")
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex -o /Source/temp.tex", intern = TRUE)
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex -o temp.tex", intern = TRUE)
system("pandoc /git_repositories/Rep-Res-Book/StylisticConventions.md -t latex -o /git_repositories/Rep-Res-Book/temp.tex", intern = TRUE)
library(foreign)
trade <- read.dta(/Users/christophergandrud/Dropbox/Jeff/SWF/Christopher/22AugustRequest/trade.dta")
trade <- read.dta("/Users/christophergandrud/Dropbox/Jeff/SWF/Christopher/22AugustRequest/trade.dta")
View(trade)
library(countrycode)
View(trade)
?countrycode
names(trade)
trade$countr <- countrycode(trade$country1, origin = iso3n, destination = imf)
trade$countr <- countrycode(trade$country1, origin = "iso3n", destination = "imf")
View(trade)
trade$countr <- countrycode(trade$country1, origin = "iso3c", destination = "imf")
View(trade)
trade$country <- countrycode(trade$country1, origin = "iso3c", destination = "imf")
summary(trade$country)
write.dta(trade, file = "~/Desktop/TradeIMF.dta")
library(foreign)
library(countrycode)
Load data
trade <- read.dta("/Users/christophergandrud/Dropbox/Jeff/SWF/Christopher/22AugustRequest/trade.dta")
trade$country <- countrycode(trade$country1, origin = "iso3c", destination = "imf")
write.dta(trade, file = "~/Desktop/TradeIMF.dta")
library(foreign)
library(countrycode)
Load data
trade <- read.dta("/Users/christophergandrud/Dropbox/Jeff/SWF/Christopher/22AugustRequest/trade.dta")
trade$imfcode <- countrycode(trade$country1, origin = "iso3c", destination = "imf")
write.dta(trade, file = "~/Desktop/TradeIMF.dta")
2+2
test <- test
?mean
0/2
x <- "Hello World"
mean(x)
mean(x)
_x <- 2
test <- "Help"
class(test)
test <- 'test'
test
library(devtools)
URL <- "https://raw.github.com/christophergandrud/christophergandrud.github.com/master/SourceCode/CarsScatterExample.R"
source_url(URL)
suppressPackageStartupMessages
?suppressPackageStartupMessages
install.packages(c("RgoogleMaps", "car", "lattice", "mgcv", "timereg"))
?set
library(knitr)
?set
??set
# For simplicity, store the URL in an object called 'url'.
url <- "http://bit.ly/S0vxk2"
# Create a temporary file called 'temp' to put the zip file into.
temp <- tempfile()
# Download the compressed file into the temporary file.
download.file(url, temp)
# Decompress the file and
#convert it into a dataframe
# class object called 'data'.
data <- read.csv(gzfile(temp, "uds_summary.csv"))
# Delete the temporary file.
unlink(temp)
View(data)
?unlink
library(knitrcitations)
library(knitcitations)
?knitcitations
# Help
test <- c(1, 2, 3)
class(test)
install.packages(c("MASS", "VGAM", "dismo", "effects", "raster", "spdep"))
class(test)
typeof(test)
?class
NumericVect <- c(1, 17, 24)
CharacterVect <- c("Cambodia", "Laos", "Thailand")
test <- cbind(NumericVect, CharacterVect)
test
?cbind
class(test)
?install.packages
StringNumObject <- data.frame(CharacterVect, NumericVect,
stringsAsFactors = FALSE)
class(StringNumObject$CharacterVect)
View(StringNumObject)
mean(StringNumObject$CharacterVect)
library(help="dataset")
library(help="datasets")
library(foreign)
/Data/public_fin_trans_data.dta")
data <- read.dta("/Users/christophergandrud/Dropbox/Public/code/Replicability_code/Fin_Trans_Replication_Journal/Data/public_fin_trans_data.dta")
View(data)
?data.frame
# A quick quiz
Population <- c(2.5, 17, 6)
Countries <- c("Cambodia", "Laos", "Thailand")
NewData <- cbind(Countries, Population)
sum(Population)
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
options(StingsAsFactors = FALSE))
NewData$Countries
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
options(stingsAsFactors = FALSE))
NewData$Countries
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
stingsAsFactors = FALSE)
NewData$Countries
NewData
# Create data.frame with no factors
NewNewData <- data.frame(Countries,
Population,
stingsAsFactors = FALSE)
NewNewData$Countries
# Create data.frame with no factors
NewNewData <- data.frame(Countries,
Population,
options(stingsAsFactors = FALSE))
NewNewData$Countries
# Create data.frame with no factors
NewNewData <- data.frame(Countries,
Population,
options(stringsAsFactors = FALSE))
NewNewData$Countries
?merge
# Create variable
Coastal <- c(1, 0, 1)
# Combine with Countries
CoastalDF <- data.frame(Countries,
Coastal,
options(stringsAsFactors = FALSE))
# Merge with NewData
CombinedData <- merge(x = NewData, y = CoastalDF, by = Countries )
# Create variable
Coastal <- c(1, 0, 1)
# Combine with Countries
CoastalDF <- data.frame(Countries,
Coastal,
options(stringsAsFactors = FALSE))
# Merge with NewData
CombinedData <- merge(x = NewData, y = CoastalDF, by = "Countries")
View(CombinedData)
?subset
# Merge with NewData
MergedData <- merge(x = NewData,
y = CoastalDF,
by = "Countries")
# Show variable names
names(MergedData)
# Merge with NewData
MergedData <- merge(x = NewData,
y = CoastalDF,
by = "Countries")
# Show variable names
names(MergedData)
class(MergedData$Coastal)
source('~/.active-rstudio-document', echo=TRUE)
# Subset NewData, columns 1 & 2
NewData <- NewData[, 1:2]
# Show variable names
names(NewData)
# Merge with NewData
MergedData <- merge(x = NewData,
y = CoastalDF,
by = "Countries")
# Show variable names
names(MergedData)
# Show the Coastal variables class
class(MergedData$Coastal)
?factor
MergedData$Coastal <- factor(MergedData$Coastal,
labels = c(
"Not Coastal",
"Coastal"))
?cbind
MoreThan7 <- NewData[, "NewDataPopulation" > 7]
MoreThan7 <- NewData[Population > 7]
MoreThan7
MoreThan7 <- NewData[NewData4Population > 7]
MoreThan7 <- NewData[NewData$Population > 7]
MoreThan7
MoreThan7 <- NewData[NewData$Population > 7]
MoreThan7
NewData <- NewData[, 1:2]
names(NewData)
# A quick matrix example
Population <- c(14.3, 6.3, 66.7)
Countries <- c("Cambodia", "Laos", "Thailand")
NewData <- cbind(Countries, Population)
NewData
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
options(
stringsAsFactors = FALSE))
NewData$Countries
# Show NewData variable names
names(NewData)
# Subset NewData, columns 1 & 2
NewData <- NewData[, 1:2]
# Show variable names
names(NewData)
# Create new object for countries with > 7m pop.
MoreThan7 <- NewData[NewData$Population > 7]
# Show contents of MoreThan7
MoreThan7
View(NewData)
View(NewData)
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
options(
stringsAsFactors = FALSE))
NewData$Countries
# Show NewData variable names
names(NewData)
View(NewData)
# A quick matrix example
Population <- c(14.3, 6.3, 66.7)
Countries <- c("Cambodia", "Laos", "Thailand")
NewData <- cbind(Countries, Population)
NewData
# Create data.frame with no factors
NewData <- data.frame(Countries,
Population,
options(
stringsAsFactors = FALSE))
NewData$Countries
# Show NewData variable names
names(NewData)
View(NewData)
# Subset NewData, columns 1 & 2
NewData <- NewData[, 1:2]
# Show variable names
names(NewData)
View(NewData)
MoreThan7 <- NewData[NewData$Population > 7]
MoreThan7 <- NewData[NewData$Population > 7]
MoreThan7 <- NewData[NewData$Population]
MoreThan7 <- NewData[NewData$Population, ]
MoreThan7
MoreThan7 <- NewData[NewData$Population > 7, ]
# Show contents of MoreThan7
MoreThan7
Population <- c(6.3, 14.3, 66.7)
Countries <- c("Cambodia", "Laos", "Thailand")
WrongCBind <- cbind(Countries, Population)
WrongCBind
library(help = "datasets")
?confint
library(reshape)
?melt
library(devtools)
ActualForeURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/ActualVsForecastGraph.R"
source_url(ActualForeURL)
# Run graph source code
PartisanErrorURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/ErrorPresPartyGraph.R"
source_url(PartisanErrorURL)
# Run main analysis source code
AnalysisURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/MainAnalysis2.R"
source_url(AnalysisURL)
# Local
#source("/git_repositories/GreenBook/Analysis/MainAnalysis2.R")
# Run main analysis source code
AnalysisURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/MainAnalysis2.R"
source_url(AnalysisURL)
# source("/git_repositories/GreenBook/Analysis/BasicAnalysisCoefPlots.R")
# Create plots
CoefPlotsURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/BasicAnalysisCoefPlots.R"
source_url(CoefPlotsURL)
View(estimates)
?c
sum(1:8)
new <- 1:8
new
mean(new)
new <- 1:7
mean(new)
new <- 1:5
mean(new)
new <- c(1, 2, 3, 4, 6, 6, 7)
mean(new)
?mean
?sum
library(help="basic")
library(help="base")
?round
2 + 2
Answer <- 2 + 2
Answer
NewVector <- c(1, 400, 700)
NewVector
library(help = "base")
?max
?random
library(WDI)
detach("package:WDI")
library("WDI")
install.packages(c("Deducer", "JGR", "ggplot2", "knitr", "scales", "shapes"))
library(knitr)
?knit
source('~/Desktop/Test2.R')
source('~/Desktop/Test2.R', echo=TRUE)
test <- 2 + 2
test2 <- 3 + 3
rm test
rm(test)
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
test2 <- 3 + 3
opts_chunk
\usepackage{subfigure}
?mean
?round
library(WDI)
?WDI
WDISearch()
WDIsearch()
library(rename)
library(reshape)
?rename
?merge
?countrycode
library(countrycode)
?countrycode
?head
install.packages(c("Deducer", "JavaGD", "Matrix", "deldir", "ggmap", "quantreg"))
?write.table
Numbers <- c(7, 12, 14)
# Character
Char <- c("House", "cat", "dog")
# Factor
Factor <- c(1, 0, 1)
# Create data frame
Data <- data.frame(Numbers, Char, Factor, options(stringsAsFactors = FALSE))
Data <- Data[, 1:3]
Data$Factor <- factor(Data$Factor, labels = c("Happy", "Sad"))
View(Data)
Numbers <- c(7, 12, 14)
# Character
Char <- c("House", "cat", "dog")
# Factor
Factor <- c(1, 0, 1)
Data <- data.frame(Numbers, Char, Factor, options(stringsAsFactors = FALSE))
View(Data)
Data <- Data[, 1:3]
Data$Factor <- factor(Data$Factor, labels = c("Happy", "Sad"))
View(Data)
knit(input = "/git_repositories/Rep-Res-Book/Writing_Setup/README.Rmd",
output = "/git_repositories/Rep-Res-Book/README.md")
library(knitr)
knit(input = "/git_repositories/Rep-Res-Book/Writing_Setup/README.Rmd",
output = "/git_repositories/Rep-Res-Book/README.md")
?knitr
?purl
?purl
install.packages(c("JGR", "JavaGD", "R.oo", "R.utils", "RSQLite", "bibtex", "devtools", "e1071", "gdata", "ggplot2", "multcomp", "munsell", "robustbase"))
?set.seed
?Sys.Date
?write.table
?unique
library(WDI)
# Download data
LifeExpect <- WDI(indicator = "SP.DYN.LE00.FE.IN")
unique(LifeExpect$country)
install.packages("extrafont")
library(extrafont)
font_import()
setwd("/git_repositories/Rep-Res-Book/Source/Parent")
embed_fonts("Rep-Res-Parent.pdf")
?ebed_fonts
?embed_fonts
setwd("/git_repositories/Rep-Res-Book/Source/Parent/")
library(extrafont)
library(knitr)
knit2pdf("Rep-Res-Parent.Rnw")
knit2pdf("Rep-Res-Parent.Rnw")
knit2pdf("Rep-Res-Parent.Rnw")
knit2pdf("Rep-Res-Parent.Rnw")
knit2pdf("Rep-Res-Parent.Rnw")
embed_fonts("Rep-Res-Parent.pdf")
setwd("/git_repositories/Rep-Res-Book/")
?knitr
?knit
knit(input = "README.Rmd", output = "/git_repositories/Rep-Res-Book/README.md")
setwd("/git_repositories/Rep-Res-Book/Writing_Setup/")
knit(input = "README.Rmd", output = "/git_repositories/Rep-Res-Book/README.md")
knit(input = "README.Rmd", output = "/git_repositories/Rep-Res-Book/README.md")
